// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v4.0.0
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_codegen.cpp:454

#ifndef _TAO_IDL_COMPANYS_FJRRIK_H_
#define _TAO_IDL_COMPANYS_FJRRIK_H_

#include /**/ "ace/pre.h"

#include "CompanyC.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"
// TAO_IDL - Generated from
// D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_arg_traits.cpp:64



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
  // TAO_IDL - Generated from
  // D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_arg_traits.cpp:931

  

  template<>
  class SArg_Traits< ::CompanyModule::TimePoint>
    : public
        Fixed_Size_SArg_Traits_T<
            ::CompanyModule::TimePoint,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };
  // TAO_IDL - Generated from
  // D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_arg_traits.cpp:931

  

  template<>
  class SArg_Traits< ::CompanyModule::YearMonthDay>
    : public
        Fixed_Size_SArg_Traits_T<
            ::CompanyModule::YearMonthDay,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };
  // TAO_IDL - Generated from
  // D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_COMPANYMODULE_PERSON__SARG_TRAITS_)
#define _COMPANYMODULE_PERSON__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::CompanyModule::Person>
    : public Object_SArg_Traits_T<
        ::CompanyModule::Person_ptr,
        ::CompanyModule::Person_var,
        ::CompanyModule::Person_out,
        TAO::Any_Insert_Policy_Noop>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_COMPANYMODULE_EMPLOYEE__SARG_TRAITS_)
#define _COMPANYMODULE_EMPLOYEE__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::CompanyModule::Employee>
    : public Object_SArg_Traits_T<
        ::CompanyModule::Employee_ptr,
        ::CompanyModule::Employee_var,
        ::CompanyModule::Employee_out,
        TAO::Any_Insert_Policy_Noop>
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_arg_traits.cpp:142

  

#if !defined (_COMPANYMODULE_IMPFACTORY__SARG_TRAITS_)
#define _COMPANYMODULE_IMPFACTORY__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::CompanyModule::ImpFactory>
    : public Object_SArg_Traits_T<
        ::CompanyModule::ImpFactory_ptr,
        ::CompanyModule::ImpFactory_var,
        ::CompanyModule::ImpFactory_out,
        TAO::Any_Insert_Policy_Noop>
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_module\module_sh.cpp:34

namespace POA_CompanyModule
{
  

  
  // TAO_IDL - Generated from
  // D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_interface\interface_sh.cpp:72

  

  class Person;
  typedef Person *Person_ptr;

  class  Person
    : public virtual PortableServer::ServantBase
  {
  protected:
    Person ();
  
  public:
    /// Useful for template programming.
    typedef ::CompanyModule::Person _stub_type;
    typedef ::CompanyModule::Person_ptr _stub_ptr_type;
    typedef ::CompanyModule::Person_var _stub_var_type;

    Person (const Person& rhs);
    virtual ~Person () = default;

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::CompanyModule::Person *_this ();
    
    virtual const char* _interface_repository_id () const;
    // TAO_IDL - Generated from
    // D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_operation\operation_sh.cpp:35

    virtual char * firstname () = 0;

    static void _get_firstname_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_operation\operation_sh.cpp:35

    virtual void firstname (
      const char * firstname) = 0;

    static void _set_firstname_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_operation\operation_sh.cpp:35

    virtual char * name () = 0;

    static void _get_name_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_operation\operation_sh.cpp:35

    virtual void name (
      const char * name) = 0;

    static void _set_name_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_operation\operation_sh.cpp:35

    virtual ::CompanyModule::YearMonthDay birthday () = 0;

    static void _get_birthday_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_operation\operation_sh.cpp:35

    virtual void birthday (
      const ::CompanyModule::YearMonthDay & birthday) = 0;

    static void _set_birthday_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_operation\operation_sh.cpp:35

    virtual char * FullName () = 0;

    static void FullName_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

  
  // TAO_IDL - Generated from
  // D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_interface\interface_sh.cpp:72

  

  class Employee;
  typedef Employee *Employee_ptr;

  class  Employee
    : public virtual POA_CompanyModule::Person
  {
  protected:
    Employee ();
  
  public:
    /// Useful for template programming.
    typedef ::CompanyModule::Employee _stub_type;
    typedef ::CompanyModule::Employee_ptr _stub_ptr_type;
    typedef ::CompanyModule::Employee_var _stub_var_type;

    Employee (const Employee& rhs);
    virtual ~Employee () = default;

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::CompanyModule::Employee *_this ();
    
    virtual const char* _interface_repository_id () const;
    // TAO_IDL - Generated from
    // D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_operation\operation_sh.cpp:35

    virtual ::CORBA::Double salary () = 0;

    static void _get_salary_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_operation\operation_sh.cpp:35

    virtual void salary (
      ::CORBA::Double salary) = 0;

    static void _set_salary_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_operation\operation_sh.cpp:35

    virtual void payout () = 0;

    static void payout_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

  
  // TAO_IDL - Generated from
  // D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_interface\interface_sh.cpp:72

  

  class ImpFactory;
  typedef ImpFactory *ImpFactory_ptr;

  class  ImpFactory
    : public virtual PortableServer::ServantBase
  {
  protected:
    ImpFactory ();
  
  public:
    /// Useful for template programming.
    typedef ::CompanyModule::ImpFactory _stub_type;
    typedef ::CompanyModule::ImpFactory_ptr _stub_ptr_type;
    typedef ::CompanyModule::ImpFactory_var _stub_var_type;

    ImpFactory (const ImpFactory& rhs);
    virtual ~ImpFactory () = default;

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::CompanyModule::ImpFactory *_this ();
    
    virtual const char* _interface_repository_id () const;
    // TAO_IDL - Generated from
    // D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_operation\operation_sh.cpp:35

    virtual ::CompanyModule::Person_ptr CreatePerson () = 0;

    static void CreatePerson_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_operation\operation_sh.cpp:35

    virtual ::CompanyModule::Employee_ptr CreateEmployee () = 0;

    static void CreateEmployee_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };


// TAO_IDL - Generated from
// D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_module\module_sh.cpp:65

} // module CompanyModule

#include /**/ "ace/post.h"

#endif /* ifndef */

