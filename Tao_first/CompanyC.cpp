// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v4.0.0
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_codegen.cpp:372


#include "CompanyC.h"
#include "tao/CDR.h"
#include "tao/Exception_Data.h"
#include "tao/Invocation_Adapter.h"
#include "tao/Object_T.h"
#include "cstring"

#if !defined (__ACE_INLINE__)
#include "CompanyC.inl"
#endif /* !defined INLINE */
// TAO_IDL - Generated from
// D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for CompanyModule::Person.

CompanyModule::Person_ptr
TAO::Objref_Traits<CompanyModule::Person>::duplicate (CompanyModule::Person_ptr p)
{
  return CompanyModule::Person::_duplicate (p);
}

void
TAO::Objref_Traits<CompanyModule::Person>::release (CompanyModule::Person_ptr p)
{
  ::CORBA::release (p);
}

CompanyModule::Person_ptr
TAO::Objref_Traits<CompanyModule::Person>::nil ()
{
  return CompanyModule::Person::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<CompanyModule::Person>::marshal (const CompanyModule::Person_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_operation\operation_cs.cpp:87

char *
CompanyModule::Person::firstname ()
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< char *>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_firstname",
      14,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _invocation_call.invoke (nullptr, 0);

  return _tao_retval.retn ();
}
// TAO_IDL - Generated from
// D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_operation\operation_cs.cpp:87

void
CompanyModule::Person::firstname (
  const char * firstname)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< char *>::in_arg_val _tao_firstname (firstname);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval),
      std::addressof(_tao_firstname)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_firstname",
      14,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _invocation_call.invoke (nullptr, 0);
}
// TAO_IDL - Generated from
// D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_operation\operation_cs.cpp:87

char *
CompanyModule::Person::name ()
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< char *>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_name",
      9,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _invocation_call.invoke (nullptr, 0);

  return _tao_retval.retn ();
}
// TAO_IDL - Generated from
// D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_operation\operation_cs.cpp:87

void
CompanyModule::Person::name (
  const char * name)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< char *>::in_arg_val _tao_name (name);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval),
      std::addressof(_tao_name)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_name",
      9,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _invocation_call.invoke (nullptr, 0);
}
// TAO_IDL - Generated from
// D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_operation\operation_cs.cpp:87

::CompanyModule::YearMonthDay
CompanyModule::Person::birthday ()
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::CompanyModule::YearMonthDay>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_birthday",
      13,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _invocation_call.invoke (nullptr, 0);

  return _tao_retval.retn ();
}
// TAO_IDL - Generated from
// D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_operation\operation_cs.cpp:87

void
CompanyModule::Person::birthday (
  const ::CompanyModule::YearMonthDay & birthday)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CompanyModule::YearMonthDay>::in_arg_val _tao_birthday (birthday);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval),
      std::addressof(_tao_birthday)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_birthday",
      13,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _invocation_call.invoke (nullptr, 0);
}
// TAO_IDL - Generated from
// D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_operation\operation_cs.cpp:87

char *
CompanyModule::Person::FullName ()
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< char *>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      1,
      "FullName",
      8,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _invocation_call.invoke (nullptr, 0);

  return _tao_retval.retn ();
}

CompanyModule::Person::Person ()
{
}
CompanyModule::Person_ptr
CompanyModule::Person::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<Person>::narrow (_tao_objref, "IDL:CompanyModule/Person:1.0");
}

CompanyModule::Person_ptr
CompanyModule::Person::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<Person>::unchecked_narrow (_tao_objref);
}

CompanyModule::Person_ptr
CompanyModule::Person::_nil ()
{
  return nullptr;
}

CompanyModule::Person_ptr
CompanyModule::Person::_duplicate (Person_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
CompanyModule::Person::_tao_release (Person_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
CompanyModule::Person::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:CompanyModule/Person:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* CompanyModule::Person::_interface_repository_id () const
{
  return "IDL:CompanyModule/Person:1.0";
}

::CORBA::Boolean
CompanyModule::Person::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}
// TAO_IDL - Generated from
// D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for CompanyModule::Employee.

CompanyModule::Employee_ptr
TAO::Objref_Traits<CompanyModule::Employee>::duplicate (CompanyModule::Employee_ptr p)
{
  return CompanyModule::Employee::_duplicate (p);
}

void
TAO::Objref_Traits<CompanyModule::Employee>::release (CompanyModule::Employee_ptr p)
{
  ::CORBA::release (p);
}

CompanyModule::Employee_ptr
TAO::Objref_Traits<CompanyModule::Employee>::nil ()
{
  return CompanyModule::Employee::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<CompanyModule::Employee>::marshal (const CompanyModule::Employee_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_operation\operation_cs.cpp:87

::CORBA::Double
CompanyModule::Employee::salary ()
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::CORBA::Double>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_salary",
      11,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _invocation_call.invoke (nullptr, 0);

  return _tao_retval.retn ();
}
// TAO_IDL - Generated from
// D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_operation\operation_cs.cpp:87

void
CompanyModule::Employee::salary (
  ::CORBA::Double salary)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Double>::in_arg_val _tao_salary (salary);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval),
      std::addressof(_tao_salary)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_salary",
      11,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _invocation_call.invoke (nullptr, 0);
}
// TAO_IDL - Generated from
// D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_operation\operation_cs.cpp:87

void
CompanyModule::Employee::payout ()
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      1,
      "payout",
      6,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _invocation_call.invoke (nullptr, 0);
}

CompanyModule::Employee::Employee ()
{
}
CompanyModule::Employee_ptr
CompanyModule::Employee::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<Employee>::narrow (_tao_objref, "IDL:CompanyModule/Employee:1.0");
}

CompanyModule::Employee_ptr
CompanyModule::Employee::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<Employee>::unchecked_narrow (_tao_objref);
}

CompanyModule::Employee_ptr
CompanyModule::Employee::_nil ()
{
  return nullptr;
}

CompanyModule::Employee_ptr
CompanyModule::Employee::_duplicate (Employee_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
CompanyModule::Employee::_tao_release (Employee_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
CompanyModule::Employee::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:CompanyModule/Person:1.0") == 0 ||
      std::strcmp (value, "IDL:CompanyModule/Employee:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* CompanyModule::Employee::_interface_repository_id () const
{
  return "IDL:CompanyModule/Employee:1.0";
}

::CORBA::Boolean
CompanyModule::Employee::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}
// TAO_IDL - Generated from
// D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for CompanyModule::ImpFactory.

CompanyModule::ImpFactory_ptr
TAO::Objref_Traits<CompanyModule::ImpFactory>::duplicate (CompanyModule::ImpFactory_ptr p)
{
  return CompanyModule::ImpFactory::_duplicate (p);
}

void
TAO::Objref_Traits<CompanyModule::ImpFactory>::release (CompanyModule::ImpFactory_ptr p)
{
  ::CORBA::release (p);
}

CompanyModule::ImpFactory_ptr
TAO::Objref_Traits<CompanyModule::ImpFactory>::nil ()
{
  return CompanyModule::ImpFactory::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<CompanyModule::ImpFactory>::marshal (const CompanyModule::ImpFactory_ptr p,TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_operation\operation_cs.cpp:87

::CompanyModule::Person_ptr
CompanyModule::ImpFactory::CreatePerson ()
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::CompanyModule::Person>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      1,
      "CreatePerson",
      12,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _invocation_call.invoke (nullptr, 0);

  return _tao_retval.retn ();
}
// TAO_IDL - Generated from
// D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_operation\operation_cs.cpp:87

::CompanyModule::Employee_ptr
CompanyModule::ImpFactory::CreateEmployee ()
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::CompanyModule::Employee>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      std::addressof(_tao_retval)
    };

  TAO::Invocation_Adapter _invocation_call (
      this,
      _the_tao_operation_signature,
      1,
      "CreateEmployee",
      14,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _invocation_call.invoke (nullptr, 0);

  return _tao_retval.retn ();
}

CompanyModule::ImpFactory::ImpFactory ()
{
}
CompanyModule::ImpFactory_ptr
CompanyModule::ImpFactory::_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<ImpFactory>::narrow (_tao_objref, "IDL:CompanyModule/ImpFactory:1.0");
}

CompanyModule::ImpFactory_ptr
CompanyModule::ImpFactory::_unchecked_narrow (::CORBA::Object_ptr _tao_objref)
{
  return TAO::Narrow_Utils<ImpFactory>::unchecked_narrow (_tao_objref);
}

CompanyModule::ImpFactory_ptr
CompanyModule::ImpFactory::_nil ()
{
  return nullptr;
}

CompanyModule::ImpFactory_ptr
CompanyModule::ImpFactory::_duplicate (ImpFactory_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
CompanyModule::ImpFactory::_tao_release (ImpFactory_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
CompanyModule::ImpFactory::_is_a (const char *value)
{
  if (
      std::strcmp (value, "IDL:CompanyModule/ImpFactory:1.0") == 0 ||
      std::strcmp (value, "IDL:omg.org/CORBA/Object:1.0") == 0
      )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* CompanyModule::ImpFactory::_interface_repository_id () const
{
  return "IDL:CompanyModule/ImpFactory:1.0";
}

::CORBA::Boolean
CompanyModule::ImpFactory::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}
// TAO_IDL - Generated from
// D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_structure\cdr_op_cs.cpp:48


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CompanyModule::TimePoint &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.milliseconds_since_epoch) &&
    true;
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CompanyModule::TimePoint &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.milliseconds_since_epoch) &&
    true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_structure\cdr_op_cs.cpp:48


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CompanyModule::YearMonthDay &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.year) &&
    (strm << _tao_aggregate.month) &&
    (strm << _tao_aggregate.day) &&
    true;
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CompanyModule::YearMonthDay &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.year) &&
    (strm >> _tao_aggregate.month) &&
    (strm >> _tao_aggregate.day) &&
    true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_interface\cdr_op_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CompanyModule::Person_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CompanyModule::Person_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  // Narrow to the right type.
  _tao_objref = TAO::Narrow_Utils< ::CompanyModule::Person>::unchecked_narrow (obj.in ());

  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_interface\cdr_op_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CompanyModule::Employee_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CompanyModule::Employee_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  // Narrow to the right type.
  _tao_objref = TAO::Narrow_Utils< ::CompanyModule::Employee>::unchecked_narrow (obj.in ());

  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// D:\gitRepos\ACE_TAO\TAO\TAO_IDL\be\be_visitor_interface\cdr_op_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CompanyModule::ImpFactory_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CompanyModule::ImpFactory_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  // Narrow to the right type.
  _tao_objref = TAO::Narrow_Utils< ::CompanyModule::ImpFactory>::unchecked_narrow (obj.in ());

  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



